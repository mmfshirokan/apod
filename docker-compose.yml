# docker-compose.yaml
version: '3.7'

services:
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "8089:80"
    links:
      - golang
    volumes:
      - ./www/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./www/html/:/var/www/html
    restart: 'unless-stopped'
    networks:
      - apod
  
  golang:
    container_name: "apod-proxy"
    build: ./
    ports:
      - '8080:8080'
    volumes:
      - ./www/html/:/var/www/html
    restart: 'unless-stopped'
    depends_on:
      - postgres
    networks:
      - apod
  
  postgres:
    container_name: 'postgres'
    image: 'postgres:latest'
    environment:
      POSTGRES_DB: 'db'
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'password'
      PGDATA: '/var/lib/postgresql/data'
    volumes:
      - data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: 'unless-stopped'
    networks:
      - apod
      
  flyway:
    image: flyway/flyway:latest
    container_name: flyway
    volumes:
      - ./migrations:/app/sql
    environment:
      FLYWAY_CONNECT_RETRIES: 60
      FLYWAY_LOCATIONS: filesystem:/app/sql
      FLYWAY_SCHEMAS: image
    command: -url=jdbc:postgresql://postgres/db -user=user -password=password -connectRetries=60 migrate
    depends_on:
      - postgres
    networks:
      - apod
volumes:
  data:
networks:
  apod: